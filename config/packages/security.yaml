security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        my_db_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/                 # regex of the path the firewall applies to - here everything
            http_basic: ~               # use http basic for login
            provider: my_db_provider    # it specifies what provider to use.
            anonymous: ~

            # avant modif : juste la ligne suivante était activée:
            # anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/public, roles: IS_AUTHENTICATED_ANONYMOUSLY}    #the role for public access
        - { path: ^/product, roles: ROLE_USER }    #each routes needs the user to have a ROLE_USER
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }    #each routes needs the user to have a ROLE_USER


        #- { path: ^/, roles: ROLE_USER }    #each routes needs the user to have a ROLE_USER

        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    encoders:
        App\Entity\User:
        # specify how the user class is encrypted
            algorithm: bcrypt